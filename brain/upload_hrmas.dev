#!/usr/bin/perl -w

#   $URL: https://intrarad.ucsf.edu/svn/rad_software/surbeck/brain/DB/nelson_ncvi/trunk/data_upload_qr_scripts/upload_hrmas $
#   $Rev: 36067 $
#   $Author: jasonc@RADIOLOGY.UCSF.EDU $
#   $Date: 2015-09-18 10:41:33 -0700 (Fri, 18 Sep 2015) $
#
#   Specialized data upload script to upload HRMAS data from spreadsheet to DB
#

use strict;
use DBI;
use DBD::Pg;
use Getopt::Long;
Getopt::Long::config("bundling");
use Pod::Usage;
use File::Spec;
use Cwd;
use Cwd 'abs_path';
require SET_BRAIN_MODULES;
use Spreadsheet::ParseExcel;


my $script    = $0;

our $xl_row; 


##########################
# read in arguments
##########################

GetOptions(
    "xl=s"       => \my $spreadsheet_name,
    "w=s"        => \my $worksheet_to_upload,
    "D"          => \my $debug, 
    "v"          => \my $verbose, 
    "s=s"        => \my $spectroscopist
) or pod2usage(-verbose=>2, -exitval=>2);

if (!defined $spreadsheet_name ) {
    pod2usage(-verbose=>2, -exitval=>2);
}

if (!defined $spectroscopist) {
    print "ERROR:  specify spectroscopist\n"; 
    pod2usage(-verbose=>2, -exitval=>2);
}


##########################
#   Connect to DB:
##########################
BRAIN_DB::brain_db_set_env( $script );
my $dbh = BRAIN_DB::brain_db_get_connection();


my $parser   = Spreadsheet::ParseExcel->new();

my $fname = $spreadsheet_name; 
print "$fname\n";
my $workbook = $parser->parse($fname);

if ( !defined $workbook ) {
    die $parser->error(), ".\n";
}

my $target_worksheet_name = "PROJECT_2_CLEANED"; 
if ( defined $worksheet_to_upload ) {
    $target_worksheet_name = "$worksheet_to_upload"; 
}


for my $worksheet ( $workbook->worksheets() ) {

    my $worksheet_name = $worksheet->get_name(); 

    print "\n\n########################\n";
    print "WORKSHEET_NAME: $worksheet_name \n";
    print "########################\n\n\n";

    if ($worksheet_name ne $target_worksheet_name ) {
        print "Worksheet Names: \n"; 
        print " $worksheet_name !=  $target_worksheet_name.  Skipping\n\n"; 
        next;  
    }

        
    my ( $row_min, $row_max ) = $worksheet->row_range();
    my ( $col_min, $col_max ) = $worksheet->col_range();

    for $xl_row ( $row_min .. $row_max ) {

        if ( defined $debug ) {
            print "\n\n"; 
            print "==========================================\n"; 
            print "Next row = $xl_row \n";
            print "\n"; 
        }

        my ($sf_num, $vial_num);
        my ($scan_date, $rotor, $tsp_wt, $sample_wt, $cal);

        #   b#, vial#
        my $cell_scan_date      = $worksheet->get_cell( $xl_row, 7 );
        my $cell_sf_num         = $worksheet->get_cell( $xl_row, 0 );
        my $cell_vial_num       = $worksheet->get_cell( $xl_row, 1 );
        my $cell_sample_wt      = $worksheet->get_cell( $xl_row, 3 );
        my $cell_tsp_wt         = $worksheet->get_cell( $xl_row, 4 );
        my $cell_rotor          = $worksheet->get_cell( $xl_row, 5 );
        my $cell_cal            = $worksheet->get_cell( $xl_row, 6 );
        
        if (defined $cell_sf_num) {
            $sf_num= $cell_sf_num->value(); 
        } else { next; };

        #   vial number
        $vial_num = ""; 
        if (defined $cell_vial_num) {
            $vial_num  = $cell_vial_num->value(); 
            if ( $vial_num =~ m/(\S+)\b.*/ ) {
                $vial_num  = $1; 
            } else {
                $vial_num = ""; 
            } 
            if ($vial_num =~ m/0(\dB\d{2,2})/ ) {
                $vial_num = $1; 
            }
        } else { next; };

        #  scan date 
        if (defined $cell_scan_date) {
            $scan_date = $cell_scan_date->value(); 
        } else { next; };


        #   sample wt 
        if (defined $cell_sample_wt) {
            $sample_wt= $cell_sample_wt->value(); 
        } else { next; };

        #   tsp wt 
        if (defined $cell_tsp_wt) {
            $tsp_wt= $cell_tsp_wt->value(); 
        } else { next; };

        #   rotor 
        if (defined $cell_rotor) {
            $rotor = $cell_rotor->value(); 
            $rotor = "R$rotor"; 
        } else { next; };

        #   cal factor 
        if (defined $cell_cal) {
            $cal = $cell_cal->value(); 
        } else { next; };

        if (defined $debug) {
            print "VNUM: $vial_num\n";
        }


        if ( $vial_num ne "" && $sf_num ne "" ) {
                
            my $insert_hrmas_script = "insert_hrmas_event";

            if ( $script =~ m/\.dev$/ ) { 
                $insert_hrmas_script .= ".dev";
            }    
            my $cmd = "$insert_hrmas_script";
            $cmd .= " --sf_num $sf_num"; 
            $cmd .= " --vial_num $vial_num"; 
            $cmd .= " --spectroscopist '$spectroscopist'";   

            if ( length($scan_date)>0 ) {
                $cmd .= " --date $scan_date";  
            }
            if ( length($rotor)>0 ) {
                $cmd .= " --rotor $rotor";   
            }
            if ( length($tsp_wt)>0 ) {
                $cmd .= " --tsp_wt $tsp_wt"; 
            }
            if ( length($sample_wt)>0 ) {
                $cmd .= " --sample_wt $sample_wt"; 
            }
            if ( length($cal)>0 ) {
                $cmd .= " --cal $cal"; 
            }

            print "$cmd\n";
            if ( !defined $verbose ) { 
                if ( system($cmd) ) {
                    print "##########################\n";
                    print "ERROR: failed running $cmd\n";
                    print "##########################\n";
                }
            }
        } else {
            print "ERROR(invalid args): Can not determine input args for HRMAS insertion(b, v#, v_color): $vial_num\n";
        } 
    }
        
}

################################################################
#   Subroutines
################################################################


###############################################################################
#
#   POD Usage docs
#
###############################################################################

=head1 NAME

    upload_hrmas

=head1 SYNOPSIS

    upload_hrmas --xl spreadsheet_name -w name -s spectroscopist [ -vD ]

        --xl    spreadsheet_name    hrmas to spreadsheet to upload. 
        -s      spectroscopist      unix login name for spectroscopist (e.g. tjalbert )    
        -w      name                name of the worksheet to upload
        -D                          Print debugging messages.
        -v                          only print upload commands, but do not execute

=cut

